import unittest
import distance_matrix_csv_writer

class MyTestCase(unittest.TestCase):
    def test_something(self):
        matrix = {'destination_addresses': ['Sequoia National Park, California, USA'], 'origin_addresses': ['Yosemite National Park, California, USA', 'Cincinnati, OH, USA'], 'rows': [{'elements': [{'distance': {'text': '138 mi', 'value': 222736}, 'duration': {'text': '2 hours 36 mins', 'value': 9334}, 'status': 'OK'}]}, {'elements': [{'distance': {'text': '2,285 mi', 'value': 3676616}, 'duration': {'text': '1 day 10 hours', 'value': 121362}, 'status': 'OK'}]}], 'status': 'OK'}

        distance_matrix_csv_writer.write_csv(matrix, 'testing.csv')

    def test_get_rows(self):
        matrix = {'destination_addresses': ['Sequoia National Park, California, USA'], 'origin_addresses': ['Yosemite National Park, California, USA', 'Cincinnati, OH, USA'], 'rows': [{'elements': [{'distance': {'text': '138 mi', 'value': 222736}, 'duration': {'text': '2 hours 36 mins', 'value': 9334}, 'status': 'OK'}]}, {'elements': [{'distance': {'text': '2,285 mi', 'value': 3676616}, 'duration': {'text': '1 day 10 hours', 'value': 121362}, 'status': 'OK'}]}], 'status': 'OK'}

        expected_rows = [["Yosemite National Park", "138 mi   2 hours 36 mins"], ["Cincinnati", "2,285 mi   1 day 10 hours"]]
        actual_row = distance_matrix_csv_writer.get_rows(matrix)
        self.assertEqual(expected_rows, actual_row)

    def test_rows_multiple_destiations(self):
        matrix = {'destination_addresses': ['Sequoia National Park, California, USA', 'Mount Rainier National Park, Washington, USA', 'Yosemite National Park, California, USA', 'Cincinnati, OH, USA', 'Kings Canyon National Park, California, USA', 'Grand Teton, Wyoming 83414, USA'], 'origin_addresses': ['Sequoia National Park, California, USA', 'Mount Rainier National Park, Washington, USA', 'Yosemite National Park, California, USA', 'Cincinnati, OH, USA', 'Kings Canyon National Park, California, USA', 'Grand Teton, Wyoming 83414, USA'], 'rows': [{'elements': [{'distance': {'text': '1 ft', 'value': 0}, 'duration': {'text': '1 min', 'value': 0}, 'status': 'OK'}, {'distance': {'text': '961 mi', 'value': 1547357}, 'duration': {'text': '15 hours 15 mins', 'value': 54906}, 'status': 'OK'}, {'distance': {'text': '138 mi', 'value': 222184}, 'duration': {'text': '2 hours 36 mins', 'value': 9332}, 'status': 'OK'}, {'distance': {'text': '2,283 mi', 'value': 3674345}, 'duration': {'text': '1 day 10 hours', 'value': 121053}, 'status': 'OK'}, {'distance': {'text': '10.3 mi', 'value': 16636}, 'duration': {'text': '16 mins', 'value': 977}, 'status': 'OK'}, {'distance': {'text': '1,071 mi', 'value': 1723636}, 'duration': {'text': '16 hours 46 mins', 'value': 60360}, 'status': 'OK'}]}, {'elements': [{'distance': {'text': '962 mi', 'value': 1548127}, 'duration': {'text': '15 hours 17 mins', 'value': 55042}, 'status': 'OK'}, {'distance': {'text': '1 ft', 'value': 0}, 'duration': {'text': '1 min', 'value': 0}, 'status': 'OK'}, {'distance': {'text': '818 mi', 'value': 1316579}, 'duration': {'text': '13 hours 47 mins', 'value': 49621}, 'status': 'OK'}, {'distance': {'text': '2,350 mi', 'value': 3782551}, 'duration': {'text': '1 day 10 hours', 'value': 123829}, 'status': 'OK'}, {'distance': {'text': '938 mi', 'value': 1509781}, 'duration': {'text': '14 hours 59 mins', 'value': 53960}, 'status': 'OK'}, {'distance': {'text': '809 mi', 'value': 1302179}, 'duration': {'text': '12 hours 55 mins', 'value': 46478}, 'status': 'OK'}]}, {'elements': [{'distance': {'text': '138 mi', 'value': 222736}, 'duration': {'text': '2 hours 36 mins', 'value': 9334}, 'status': 'OK'}, {'distance': {'text': '818 mi', 'value': 1316077}, 'duration': {'text': '13 hours 45 mins', 'value': 49471}, 'status': 'OK'}, {'distance': {'text': '1 ft', 'value': 0}, 'duration': {'text': '1 min', 'value': 0}, 'status': 'OK'}, {'distance': {'text': '2,176 mi', 'value': 3501877}, 'duration': {'text': '1 day 8 hours', 'value': 115962}, 'status': 'OK'}, {'distance': {'text': '112 mi', 'value': 179695}, 'duration': {'text': '2 hours 15 mins', 'value': 8098}, 'status': 'OK'}, {'distance': {'text': '813 mi', 'value': 1308884}, 'duration': {'text': '12 hours 52 mins', 'value': 46319}, 'status': 'OK'}]}, {'elements': [{'distance': {'text': '2,285 mi', 'value': 3676616}, 'duration': {'text': '1 day 10 hours', 'value': 121362}, 'status': 'OK'}, {'distance': {'text': '2,354 mi', 'value': 3788511}, 'duration': {'text': '1 day 10 hours', 'value': 124056}, 'status': 'OK'}, {'distance': {'text': '2,197 mi', 'value': 3535951}, 'duration': {'text': '1 day 8 hours', 'value': 116775}, 'status': 'OK'}, {'distance': {'text': '1 ft', 'value': 0}, 'duration': {'text': '1 min', 'value': 0}, 'status': 'OK'}, {'distance': {'text': '2,321 mi', 'value': 3734910}, 'duration': {'text': '1 day 10 hours', 'value': 123355}, 'status': 'OK'}, {'distance': {'text': '1,632 mi', 'value': 2625729}, 'duration': {'text': '1 day 0 hours', 'value': 87617}, 'status': 'OK'}]}, {'elements': [{'distance': {'text': '10.3 mi', 'value': 16636}, 'duration': {'text': '17 mins', 'value': 994}, 'status': 'OK'}, {'distance': {'text': '938 mi', 'value': 1509028}, 'duration': {'text': '14 hours 57 mins', 'value': 53799}, 'status': 'OK'}, {'distance': {'text': '111 mi', 'value': 179293}, 'duration': {'text': '2 hours 14 mins', 'value': 8069}, 'status': 'OK'}, {'distance': {'text': '2,321 mi', 'value': 3734881}, 'duration': {'text': '1 day 10 hours', 'value': 123022}, 'status': 'OK'}, {'distance': {'text': '1 ft', 'value': 0}, 'duration': {'text': '1 min', 'value': 0}, 'status': 'OK'}, {'distance': {'text': '1,071 mi', 'value': 1722885}, 'duration': {'text': '16 hours 52 mins', 'value': 60732}, 'status': 'OK'}]}, {'elements': [{'distance': {'text': '1,070 mi', 'value': 1722573}, 'duration': {'text': '16 hours 45 mins', 'value': 60303}, 'status': 'OK'}, {'distance': {'text': '809 mi', 'value': 1302054}, 'duration': {'text': '12 hours 55 mins', 'value': 46505}, 'status': 'OK'}, {'distance': {'text': '813 mi', 'value': 1308328}, 'duration': {'text': '12 hours 57 mins', 'value': 46593}, 'status': 'OK'}, {'distance': {'text': '1,610 mi', 'value': 2591352}, 'duration': {'text': '1 day 0 hours', 'value': 87009}, 'status': 'OK'}, {'distance': {'text': '1,070 mi', 'value': 1721688}, 'duration': {'text': '16 hours 54 mins', 'value': 60844}, 'status': 'OK'}, {'distance': {'text': '1 ft', 'value': 0}, 'duration': {'text': '1 min', 'value': 0}, 'status': 'OK'}]}], 'status': 'OK'}
        expected_first_row = ["Sequoia National Park", "1 ft   1 min", "961 mi   15 hours 15 mins", "138 mi   2 hours 36 mins", "2,283 mi   1 day 10 hours", "10.3 mi   16 mins", "1,071 mi   16 hours 46 mins"]
        actual_first_row = distance_matrix_csv_writer.get_rows(matrix)[0]
        self.assertEqual(expected_first_row, actual_first_row)


if __name__ == '__main__':
    unittest.main()